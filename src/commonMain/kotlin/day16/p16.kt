package day16

import infinite
import print
import kotlin.math.abs

fun Sequence<Int>.repeatElements(n: Int) = sequence {
    this@repeatElements.forEach { item ->
        repeat(n) {
            yield(item)
        }
    }
}

val p16 = suspend {

    val input = inputTxt.chunked(1).map { it.toInt() }
    val pattern = sequenceOf(0, 1, 0, -1)
    val patterns = (1..input.size).map { pattern.repeatElements(it).infinite().drop(1).take(input.size).toList() }

    val phases = generateSequence(input) {
        patterns.map { pattern -> abs(pattern.zip(it).sumBy { it.first * it.second }.rem(10)) }
    }.drop(1)

    phases.take(100).last().take(8).joinToString("").print()


//    phases.take(100).toList().joinToString("\n") {it.joinToString("")}.print()

}

val testTxt = "12345678"
val testTxt2 = "80871224585914546619083218645595"
val inputTxt =
    """59758034323742284979562302567188059299994912382665665642838883745982029056376663436508823581366924333715600017551568562558429576180672045533950505975691099771937719816036746551442321193912312169741318691856211013074397344457854784758130321667776862471401531789634126843370279186945621597012426944937230330233464053506510141241904155782847336539673866875764558260690223994721394144728780319578298145328345914839568238002359693873874318334948461885586664697152894541318898569630928429305464745641599948619110150923544454316910363268172732923554361048379061622935009089396894630658539536284162963303290768551107950942989042863293547237058600513191659935"""